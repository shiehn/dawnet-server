# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name signalsandsorceryapi.com; # Replace with your domain name or server IP

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name signalsandsorceryapi.com; # Replace with your domain name or server IP

    ssl_certificate /etc/letsencrypt/live/signalsandsorceryapi.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/signalsandsorceryapi.com/privkey.pem;

#   Serve Static Files for API
    location /api/static/ {
      alias /var/www/api/static; # Update this path
    }

    # Serve Static Files for CMS
    location /cms/static/ {
      alias /var/www/cms/static; # Update this path
    }

    # CMS proxy configuration
    location / {
            proxy_pass http://cms:8082;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    location /auth {
        proxy_pass http://cms:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API proxy configuration
    location /api {
        proxy_pass http://api:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy configuration
    location /ws {
        proxy_pass http://websocket:8765;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

