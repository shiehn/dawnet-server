# Redirect all HTTP traffic to HTTPS and handle ACME challenge for SSL certificate
server {
    listen 80;
    server_name 34.135.228.111; # Replace with your domain name or server IP

    # Location for ACME Challenge responses
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # Ensure this path matches the one in your Docker Compose setup
        try_files $uri $uri/ =404; # Serve the challenge files directly
        allow all;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name 34.135.228.111; # Replace with your domain name or server IP

    ssl_trusted_certificate /etc/ssl/certs/gd_bundle-g2-g1.crt;
    ssl_certificate_key /etc/ssl/private/generated-private-key.txt;
    ssl_certificate /etc/ssl/certs/ddfda9a2ad338b2b.crt;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # DNS resolver settings
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Serve Static Files for API
    location /api/static {
      alias /var/www/api/static; # Update this path
    }

    # Serve Static Files for CMS
    location /cms/static {
      alias /var/www/cms/static; # Update this path
    }

    # CMS proxy configuration
    location / {
            proxy_pass http://cms:8082;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /auth {
        proxy_pass http://cms:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API proxy configuration
    location /api {
        proxy_pass http://api:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy configuration
    location /ws {
        proxy_pass http://websocket:8765;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

