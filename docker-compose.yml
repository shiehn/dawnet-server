services:
    cms:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile.cms
        external_links:
            - postgres
        environment:
            - POSTGRESQL_ADDON_HOST=postgres
            - POSTGRESQL_ADDON_DB=${POSTGRESQL_ADDON_DB:-django_seed}
            - POSTGRESQL_ADDON_PASSWORD=${POSTGRESQL_ADDON_PASSWORD:-toto42}
            - POSTGRESQL_ADDON_USER=${POSTGRESQL_ADDON_USER:-postgres}
            - POSTGRESQL_ADDON_PORT=5432
            - DJANGO_SETTINGS_MODULE=app.settings.web
            - SENTRY_DSN=${SENTRY_URL}
            - DEBUG=${DEBUG:-true}
        env_file:
            - ./.env
        ports:
            - 8082:8082
        networks:
            - django-seed-network
        volumes:
            - static-cms:/cms/app/static
        depends_on:
            - postgres
    websocket:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile.websocket
        environment:
            - SENTRY_DSN=${SENTRY_URL}
            - DEBUG=${DEBUG:-true}
            - DN_WS_URL_BASE=${DN_WS_URL_BASE:-http://localhost:8081}
        env_file:
            - ./.env
        ports:
            - 8765:8765
        networks:
            - django-seed-network
        depends_on:
            - postgres
            - api
    api:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile.api
        external_links:
            - postgres
        environment:
            - POSTGRESQL_ADDON_HOST=postgres
            - POSTGRESQL_ADDON_DB=${POSTGRESQL_ADDON_DB:-django_seed}
            - POSTGRESQL_ADDON_PASSWORD=${POSTGRESQL_ADDON_PASSWORD:-toto42}
            - POSTGRESQL_ADDON_USER=${POSTGRESQL_ADDON_USER:-postgres}
            - POSTGRESQL_ADDON_PORT=5432
            - DJANGO_SETTINGS_MODULE=app.settings.api
            - WEB_SOCKET_SERVER_IP=websocket
            - WEB_SOCKET_PORT=${WEB_SOCKET_PORT:-8765}
            - GCP_SERVICE_ACCOUNT_FILE=${GCP_SERVICE_ACCOUNT_FILE:-empty}
            - GCP_ASSET_BUCKET=${GCP_ASSET_BUCKET:-empty}
            - SENTRY_DSN=${SENTRY_URL}
            - DEBUG=${DEBUG:-true}
        env_file:
            - ./.env
        ports:
            - 8081:8081
        networks:
            - django-seed-network
        volumes:
            - static-api:/api/app/static
        depends_on:
            - postgres
    postgres:
        image: postgres:14
        restart: always
        ports:
            - 5438:5432
        environment:
            - POSTGRES_PASSWORD=${POSTGRESQL_ADDON_PASSWORD:-toto42}
            - POSTGRES_USER=${POSTGRESQL_ADDON_USER:-postgres}
            - POSTGRES_DB=${POSTGRESQL_ADDON_DB:-django_seed}
        env_file:
            - ./.env
        networks:
            - django-seed-network
        volumes:
            - postgres-data:/var/lib/postgresql/data
    nginx:
        image: nginx:alpine
        volumes:
            - static-api:/var/www/api/static
            - static-cms:/var/www/cms/static
            - ./nginx/conf:/etc/nginx/conf.d:ro
            - ./certbot/conf:/etc/letsencrypt:ro
            - ./certbot/www:/var/www/certbot
        env_file:
            - ./.env
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - cms
            - websocket
            - api
        networks:
            - django-seed-network

    certbot:
        image: certbot/certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on:
            - nginx
        networks:
            - django-seed-network

volumes:
    postgres-data:
    static-api:
    static-cms:
    certbot/conf:
    certbot/www:

networks:
  django-seed-network:
    name: django-seed-local
