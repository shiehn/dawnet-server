import random


class RiddleGenerator:
    def __init__(self, asset_generator):
        self.asset_generator = asset_generator
        self.common_passwords = [
            "apple",
            "tree",
            "house",
            "sun",
            "moon",
            "star",
            "cloud",
            "rain",
            "snow",
            "mountain",
            "river",
            "lake",
            "ocean",
            "fish",
            "bird",
            "cat",
            "dog",
            "horse",
            "cow",
            "sheep",
            "pig",
            "mouse",
            "elephant",
            "lion",
            "tiger",
            "bear",
            "wolf",
            "snake",
            "frog",
            "butterfly",
            "bee",
            "ant",
            "spider",
            "whale",
            "shark",
            "dolphin",
            "octopus",
            "crab",
            "lobster",
            "seal",
            "penguin",
            "owl",
            "hawk",
            "parrot",
            "swan",
            "peacock",
            "eagle",
            "kite",
            "bat",
            "dragon",
            "unicorn",
            "mermaid",
            "wizard",
            "witch",
            "king",
            "queen",
            "castle",
            "sword",
            "shield",
            "knight",
            "pirate",
            "ship",
            "treasure",
            "map",
            "compass",
            "anchor",
            "helmet",
            "crown",
            "ring",
            "wand",
            "ghost",
            "vampire",
            "mummy",
            "skeleton",
            "zombie",
            "werewolf",
            "robot",
            "alien",
            "spaceship",
            "rocket",
            "moon",
            "star",
            "planet",
            "galaxy",
            "comet",
            "meteor",
            "asteroid",
            "volcano",
            "earthquake",
            "tornado",
            "hurricane",
            "storm",
            "rainbow",
            "cave",
            "island",
            "forest",
            "jungle",
            "desert",
            "prairie",
            "field",
            "farm",
            "barn",
            "tractor",
            "mill",
            "bridge",
            "tower",
            "fence",
            "gate",
            "path",
            "road",
            "street",
            "alley",
            "avenue",
            "boulevard",
            "lane",
            "car",
            "truck",
            "bus",
            "train",
            "bicycle",
            "scooter",
            "boat",
            "balloon",
            "lighthouse",
            "firehouse",
            "school",
            "library",
            "museum",
            "church",
            "temple",
            "mosque",
            "synagogue",
            "shop",
            "store",
            "market",
            "bakery",
            "butcher",
            "pharmacy",
            "hospital",
            "jail",
            "courthouse",
            "bank",
            "hotel",
            "restaurant",
            "cafe",
            "bar",
            "club",
            "park",
            "playground",
            "zoo",
            "circus",
            "theater",
            "cinema",
            "stadium",
            "arena",
            "pool",
            "gym",
            "tent",
            "cabin",
            "hut",
            "palace",
            "fort",
            "campfire",
            "fireplace",
            "stove",
            "lamp",
            "light",
            "candle",
            "torch",
            "lantern",
            "mirror",
            "window",
            "door",
            "key",
            "lock",
            "clock",
            "watch",
            "timer",
            "calendar",
            "pen",
            "pencil",
            "brush",
            "bucket",
            "broom",
            "mop",
            "shovel",
            "hammer",
            "screwdriver",
            "wrench",
            "pliers",
            "saw",
            "axe",
            "drill",
            "nail",
            "screw",
            "nut",
            "bolt",
            "chain",
            "rope",
            "hook",
            "tape",
            "glue",
            "paint",
            "crayon",
            "marker",
            "chalk",
            "eraser",
            "ruler",
            "level",
            "scale",
            "book",
            "notebook",
            "letter",
            "card",
            "envelope",
            "poster",
            "map",
            "globe",
            "ball",
            "bat",
            "racket",
            "net",
            "goal",
            "basket",
            "ski",
            "sled",
            "boot",
            "shoe",
            "sandals",
            "hat",
            "cap",
            "helmet",
            "scarf",
            "glove",
            "mitten",
            "coat",
            "jacket",
            "dress",
            "shirt",
            "pants",
            "shorts",
            "skirt",
            "socks",
            "sweater",
            "vest",
            "belt",
            "tie",
            "scarf",
            "purse",
            "wallet",
            "bag",
            "backpack",
            "box",
            "barrel",
            "basket",
            "vase",
            "pot",
            "pan",
            "plate",
            "bowl",
            "cup",
            "mug",
            "glass",
            "knife",
            "fork",
            "spoon",
            "ladle",
            "spatula",
            "strainer",
            "peeler",
            "grater",
            "chopper",
            "blender",
            "oven",
            "washer",
            "dryer",
            "vacuum",
            "fan",
        ]

    def generate_password(self):
        # Randomly select a password from a predefined list
        return random.choice(self.common_passwords)

    def generate_incorrect_passwords(self, correct_password):
        # Ensure the incorrect passwords are unique and different from the correct password
        incorrect_passwords = set()
        while len(incorrect_passwords) < 3:
            candidate = random.choice(self.common_passwords)
            if candidate != correct_password:
                incorrect_passwords.add(candidate)
        return list(incorrect_passwords)

    async def generate_clues(self, password: str, setting_and_lore: str):
        # Generate a clue using the AssetGenerator's capability
        clue = await self.asset_generator.generate_riddle(password, setting_and_lore)
        return [clue]
